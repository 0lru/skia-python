name: Build and test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build-manylinux2010:
    if: false
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2010_x86_64
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Set up Python 2.7
      run: echo "::add-path::/opt/python/cp27-cp27m/bin"
    - name: Set PATH
      run: echo "::add-path::$PWD/depot_tools"
    - name: Install gn
      env:
        CC: gcc
        CXX: g++
        AR: ar
        LDFLAGS: -lrt
      run: |
        git clone https://gn.googlesource.com/gn
        cd gn
        python build/gen.py
        ninja -C out
        cd ..
    - name: Install libfreetype2 and fontconfig
      run: |
        yum install -y freetype-devel expat-devel
        curl -L -O https://www.freedesktop.org/software/fontconfig/release/fontconfig-2.10.93.tar.bz2
        tar xjf fontconfig-2.10.93.tar.bz2
        cd fontconfig-2.10.93
        ./configure --prefix=/usr \
                    --sysconfdir=/etc \
                    --localstatedir=/var \
                    --docdir=/usr/share/doc/fontconfig-2.10.93 \
                    --disable-docs \
                    --disable-static
        make -j2 install
        cd ..
    - name: Build Skia
      run: |
        cd skia
        python2 tools/git-sync-deps
        cp -f ../gn/out/gn bin/gn  # Replace gn.
        bin/gn gen out/Release --args='is_official_build=false is_debug=false extra_cflags_cc=["-frtti"] extra_ldflags=["-lrt"]'
        ninja -C out/Release skia skia.h
        cd ..
  build-manylinux2014:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - cp35-cp35m
    container: quay.io/pypa/manylinux2014_x86_64
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install system dependency
      run: yum install -y fontconfig-devel mesa-libGL-devel
    - uses: actions/cache@v1
      id: cache
      with:
        path: skia/out/Release
        key: manylinux2014-skia-out
    - name: Set PATH
      run: echo "::add-path::$PWD/depot_tools"
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Build Skia
      run: |
        cd skia
        python tools/git-sync-deps
        bin/gn gen out/Release --args='is_official_build=false is_debug=false extra_cflags_cc=["-frtti"] extra_ldflags=["-lrt"]'
        ninja -C out/Release skia skia.h
        cd ..
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Set up Python
      run: echo "::add-path::/opt/python/${{ matrix.python-version }}/bin"
    - name: Build python binding
      run: |
        python -m pip install -U pip
        python -m pip install pybind11
        python setup.py install
    - name: Test
      run: |
        python -m pip install pytest numpy
        python -m pytest tests
  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.5]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/cache@v1
      id: cache
      with:
        path: skia/out/Release
        key: ${{ runner.os }}-skia-out
    - name: Set up Python 2.7
      uses: actions/setup-python@v1
      with:
        python-version: 2.7
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Set PATH
      run: echo "::add-path::$PWD/depot_tools"
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Build Skia
      run: |
        cd skia
        python tools/git-sync-deps
        bin/gn gen out/Release --args='is_official_build=false is_debug=false extra_cflags_cc=["-frtti"]'
        ninja -C out/Release skia skia.h
        cd ..
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build python binding
      env:
        CC: clang
        CXX: clang++
      run: |
        python -m pip install -U pip
        python -m pip install pybind11
        python setup.py install
    - name: Test
      run: |
        python -m pip install pytest numpy
        python -m pytest tests
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [ x64 ]
        python-version: [3.5]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/cache@v1
      id: cache
      with:
        path: skia\out\Release
        key: ${{ runner.os }}-${{ matrix.arch }}-skia-out
    - name: Set up Python 2.7
      uses: actions/setup-python@v1
      with:
        python-version: 2.7
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Set PATH
      run: echo "::add-path::$PWD\depot_tools"
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Build Skia
      run: |
        cd skia
        python tools\git-sync-deps
        bin\gn gen out\Release --args='is_official_build=false is_debug=false extra_cflags_cc=[\"/GR\", \"/EHsc\"] target_cpu=\"${{ matrix.arch }}\"'
        ninja -C out\Release skia skia.h
        cd ..
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build python binding
      env:
        DISTUTILS_USE_SDK: 1
      run: |
        $path = vswhere -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
        $args = '-arch=${{ matrix.arch }}'
        if ($path) {
            $path = join-path $path 'Common7\Tools\vsdevcmd.bat'
            if (test-path $path) {
                cmd /s /c """$path"" $args && set" | where { $_ -match '(\w+)=(.*)' } | foreach {
                    $null = new-item -force -path "Env:\$($Matches[1])" -value $Matches[2]
                }
            }
        }
        python -m pip install -U pip
        python -m pip install pybind11
        python setup.py install
    - name: Test
      run: |
        python -m pip install pytest pytest-faulthandler numpy
        python -m pytest tests
